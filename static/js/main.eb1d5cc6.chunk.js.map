{"version":3,"sources":["components/Form.component.jsx","components/ToDo.component.jsx","components/Todo-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","setToDos","toDos","inputText","setStatus","value","onChange","event","target","type","className","onClick","preventDefault","text","complete","id","Math","floor","random","name","ToDo","todo","map","item","filter","element","ToDoList","completedToDo","console","log","App","useState","status","setCompletedToDo","useEffect","getFromLocalStorage","completedHandler","saveToLocalStorage","localStorage","setItem","JSON","stringify","getItem","savedToDo","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb1d5cc6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Form = ({setInputText,setToDos,toDos,inputText,setStatus}) =>{\r\n\r\n    const inputTextHandler = (event) =>{\r\n        setInputText(event.target.value);\r\n    }\r\n    const submitToDoHandler = (event) =>{\r\n        event.preventDefault();\r\n        setToDos ([\r\n            ...toDos,\r\n            {text: inputText , complete:false, id: Math.floor(Math.random() *1000)}\r\n        ]);\r\n        setInputText('');\r\n    };\r\n    const statusHandler = (event) =>{\r\n      setStatus(event.target.value);\r\n  };\r\n    return(\r\n        <form>\r\n        <input \r\n                value={inputText}\r\n                onChange={inputTextHandler}  \r\n                type=\"text\" \r\n                className=\"todo-input\" />\r\n        <button className=\"todo-button\" type=\"submit\" onClick = {submitToDoHandler} >\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select name=\"todos\" className=\"filter-todo\" onChange={statusHandler}>\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    );\r\n}","import React from 'react'; \r\n\r\nexport const ToDo = ({text,todo,toDos,setToDos}) =>{\r\n\r\n    const deleteBtnHandler = () =>{\r\n        setToDos(toDos.filter(element => {\r\n            return element.id !== todo.id;\r\n        }));\r\n    }\r\n    const completeBtnHandler = ()=>{\r\n        setToDos(toDos.map(item =>{\r\n            if(item.id === todo.id){\r\n                return {\r\n                    ...item , complete: !item.complete,\r\n                };\r\n            }\r\n            return item;\r\n        })\r\n        );\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.complete ? 'completed' : ''}`}>{text}</li>\r\n                <button className=\"complete-btn\" onClick={completeBtnHandler}>\r\n                    <i className=\"fas fa-check\"></i>\r\n                </button>\r\n                <button className=\"trash-btn\" onClick={deleteBtnHandler}>\r\n                    <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n            \r\n        </div>\r\n    );\r\n};","import React from   'react';\r\nimport {ToDo} from './ToDo.component';\r\n\r\nexport const ToDoList = ({toDos,setToDos,completedToDo}) =>{\r\n    console.log(toDos);\r\n    return(\r\n        <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n            {completedToDo.map(todo => (\r\n                    <ToDo \r\n                    text={todo.text} \r\n                    key={todo.id}\r\n                    setToDos={setToDos}\r\n                    toDos={toDos}\r\n                    todo={todo}\r\n                    />\r\n            ))}\r\n            \r\n        </ul>\r\n      </div>\r\n    );\r\n} ","import './App.css';\nimport React ,{Component, useState,useEffect} from 'react';\n// Import form and todo list\nimport {Form} from './components/Form.component';\nimport { ToDoList } from './components/Todo-list.component';\n\nfunction App() {\n  // States\n   const [inputText,setInputText] = useState('');\n   const [toDos,setToDos] = useState([]);\n   const [status,setStatus] = useState('all');\n   const [completedToDo,setCompletedToDo] = useState([]);\n\n   useEffect(()=>{\n    getFromLocalStorage();\n   },[])\n\n  //  USE EFFECT\n  useEffect(()=>{ \n    completedHandler();\n    saveToLocalStorage();\n  },[toDos,status]);\n// Savt to local storage\nconst saveToLocalStorage = () =>{\n  localStorage.setItem('ToDO',JSON.stringify(toDos));\n};\n// Get From Local Storage\nconst getFromLocalStorage = ()=>{\n  if(localStorage.getItem('ToDO') === null ){\n    localStorage.setItem('ToDo' ,JSON.stringify([]) );\n  }\n  else{\n    let savedToDo = JSON.parse(localStorage.getItem('ToDO'));\n    setToDos(savedToDo);\n  }\n};\n  \n// Functions\n   const completedHandler = () =>{\n     switch(status){\n       case 'completed':\n        setCompletedToDo(toDos.filter(item => item.complete === true))\n          break;\n       case 'uncompleted':\n        setCompletedToDo(toDos.filter(item => item.complete === false))\n          break;\n          default:\n            setCompletedToDo(toDos);\n     }\n   };\n\n  return (\n    <div className=\"App\">\n      <header> <h1> Mohammad's ToDo List </h1></header>\n       <Form \n          inputText={inputText}  \n          setInputText={setInputText} \n          toDos={toDos} \n          setToDos={setToDos} \n          setStatus={setStatus}\n          />\n       <ToDoList \n       toDos={toDos} \n       setToDos={setToDos}\n       completedToDo={completedToDo}\n       />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}